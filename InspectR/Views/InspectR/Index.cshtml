@using InspectR.Data
@using InspectR.Helpers
@{
    var UserProfile = ViewBag.UserProfile as InspectRUserProfile;
}
<div class="hero-unit">
    <h1>InspectB.in http requests</h1>    
    <img class="lower" src="~/Images/screenshot1.png" alt="screenshot" title="InspectR screenshot"/>
    <h4>Test remote http clients and webhooks. Point to your InspectBin url and start inspecting.</h4>
    <p class="lower">
        Based on the idea of RequestBin (requestb.in), set your http client or webhook to point to your InspectBin url.<br />
        We will collect http requests and show it in a nice and friendly way, live!<br />
    </p>
    <p class="lower">
        <a class="btn btn-primary btn-large" href="@Url.InspectR().Create()">Create a new InspectBin &raquo;</a>
    </p>
</div>
@if (UserProfile != null)
{
<div class="well">
    <strong>Your bins:</strong>
    @UserProfile.Inspectors.Select(x=>x.UniqueKey).Join(", ", @<a href="@Url.InspectR().Inspect(item)">@item</a>)
</div>    
}
<div class="row">
    <div class="span4">
        <h2>Open Source</h2>
        <p>
            InspectB.in runs the opensource project InspectR. It is build using Asp.Net MVC, SignalR (Rrr), Bootstrap, Knockout JS and several others.<br />
        </p>
        <p>
            For more info, visit our github project wiki.
        </p>
        <p>
            <a class="btn" href="https://github.com/remcoros/InspectR">Github Project &raquo;</a>
        </p>
    </div>
    <div class="span4">
        <h2>Contribute!</h2>
        <p>
            We are just starting this project, any help is welcome.
            Visit the wiki at our github project page for more information.
        </p>
        <p>
            <a class="btn" href="https://github.com/remcoros/InspectR/wiki">Project Wiki &raquo;</a>
        </p>
    </div>
    <div class="span4">
        <h2>How does it work?</h2>
        <p>
            Quite simple. When you make a request to the url, you hit our InspectR Controller. It is stored in our cache with your inspector key, and collects additional data about the http request.
            This request info is broadcasted to all SignalR Hub subscriber (?inspect url's). When you watch the ?inspect url, you will be notified almost instantly of any incomming http requests.<br />
            On first loading of the ?inspect url, we get a list of recent requests, so not all is lost when you hit F5. That's also the reason why we cache the http requests.
        </p>
        <p>
            For more information, check out some source:
        </p>
        <p>
            <a class="btn" href="https://github.com/remcoros/InspectR/blob/master/InspectR/Scripts/inspectr.js">Discover the magic &raquo;</a>
        </p>
    </div>
</div>
