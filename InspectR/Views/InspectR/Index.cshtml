@using InspectR.Data
@using InspectR.Helpers
@{
    var UserProfile = ViewBag.UserProfile as InspectRUserProfile;
}
<div class="row">
    @if (UserProfile == null) {
        <div class="span12">
            <div class="hero-unit start">
                <h1>InspectB.in</h1>
                <img src="~/Content/images/screenshot1.png" alt="screenshot" title="InspectR screenshot" />
                <h4>Having trouble testing remote http clients and webhooks? Point them to your InspectBin url and start inspecting. It's that easy!</h4>
                <p class="lower">
                    InspectBin is based on the idea of RequestBin (requestb.in), set your http client or webhook to point to your InspectBin url.<br />
                    We will collect http requests and show it in a nice and friendly way, <strong>live!</strong>
                </p>
                <a class="btn btn-primary btn-large" href="@Url.InspectR().Create()">Create new InspectBin &raquo;</a>
            </div>
        </div>
    } else {
        <div class="span8">
            <div class="hero-unit start">
                <h1>InspectB.in</h1>
                <h4>Having trouble testing remote http clients and webhooks? Point them to your InspectBin url and start inspecting. It's that easy!</h4>
                <p class="lower">
                    InspectBin is based on the idea of RequestBin (requestb.in), set your http client or webhook to point to your InspectBin url.<br />
                    We will collect http requests and show it in a nice and friendly way, <strong>live!</strong>
                </p>
                <a class="btn btn-primary btn-large" href="@Url.InspectR().Create()">Create new InspectBin &raquo;</a>
            </div>
        </div>
        <div class="span4">
            <div class="well sidebar-nav">
                <ul class="nav nav-list">
                    <li class="nav-header">Your bins:</li>
                    @foreach (var item in UserProfile.Inspectors.Take(10))
                    {
                        <li>
                            <a href="@Url.InspectR().Inspect(item.UniqueKey)">
                                @if (item.Title != item.UniqueKey && !string.IsNullOrWhiteSpace(item.Title))
                                {
                                    @item.Title <small>(@item.UniqueKey)</small>
                                }
                                else
                                {
                                    @item.UniqueKey
                                }
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>        
    }
</div>

<div class="row">
    <div class="span4">
        <div class="well purple">
            <img src="~/Content/images/opensource.png" />
            <h2>Open Source</h2>
        </div>
        <p>
            InspectB.in runs the opensource project InspectR. It is build using Asp.Net MVC, SignalR (Rrr), Bootstrap, Knockout JS and several others.<br />
        </p>
        <p>
            For more info, visit our github project wiki.
        </p>
        <p>
            <a class="btn" href="https://github.com/remcoros/InspectR/wiki">Project Wiki &raquo;</a>
        </p>
    </div>
    <div class="span4">
        <div class="well red">
            <img src="~/Content/images/Git.png" />
            <h2>Contribute!</h2>
        </div>
        <p>
            We are just starting this project, any help is welcome. Feel free to join in. Send us suggestions, report any issues or fork the code and send a pull requests.
        </p>
        <p>Check out the <em>code</em> on our github page.</p>
        <p>
            <a class="btn" href="https://github.com/remcoros/InspectR">Github Project &raquo;</a>
        </p>
    </div>
    <div class="span4">
        <div class="well green">
            <img src="~/Content/images/how.png" />
            <h2>How does it work?</h2>
        </div>
        <p>
            When a http request is made to your inspectbin url, it is logged with additional data about the http request.
            The browser is immediately notified of this new incomming request and shows it to you in a nice way.
        </p>
        <p>Try it yourself, it's free!</p>
        <p>
            <a class="btn" href="@Url.InspectR().Create()">Create new InspectBin &raquo;</a>
        </p>
    </div>
</div>
