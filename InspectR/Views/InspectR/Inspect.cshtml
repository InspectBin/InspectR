@using InspectR.Helpers
@model InspectR.Models.InspectRViewModel
@{
    var FullUrl = Url.InspectR().FullLogUrl("xXx");
}
@section menu {
    <form class="nav navbar-form navbar-left" action="@Url.InspectR().Log(Model.InspectorInfo.UniqueKey)">
        <div class="input-group">
            <input id="inspectorurl" class="form-control" type="text" data-bind="value: '@Html.Raw(FullUrl)'.replace('xXx', Inspector() ? Inspector().UniqueKey() : '')" value="@FullUrl" readonly="readonly" style="cursor: text">
            <span class="input-group-btn">
                <button id="copyinspectorurl" class="btn btn-default" type="button">Copy</button>
                <a href="javascript:window.open($('#inspectorurl').val()); void(0);" class="btn btn-default">Visit</a>
            </span>
            @*<a href="@Url.Action("Log", new { id = Model.InspectorInfo.UniqueKey })" class="btn" target="_blank">POST</a>*@
        </div>
    </form>
}
<div class="row" data-bind="visible: !Inspector()">
    <div class="col-md-8 col-md-offset-2">
        <h2>Preparing HTTP Request interface...</h2>
    </div>
</div>
<div class="row" style="display: none" data-bind="if:Inspector, visible: Inspector">
    <div class="col-md-9">
        <div class="alerts" data-bind="foreach: Alerts">
            <div class="alert" data-bind="css: Type">
                <button type="button" class="close" data-bind="click: close">×</button>
                <h4 data-bind="text: Title"></h4>
                <!-- ko text: Content --><!-- /ko -->
            </div>
        </div>
        <h2>Incoming HTTP requests</h2>
        <p>
            Use your inspectbin url in your http client or set is as the target of your webhook.
            @*Click the images to show how you can easily test this using your own github repository.*@
        </p>
        @*        <img rel="lightbox[inspectgithub]" src="~/Images/inspectgithub1.png" alt="screenshot" title="InspectBin screenshot" />
            <img rel="lightbox[inspectgithub]"src="~/Images/inspectgithub2.png" alt="screenshot" title="InspectBin screenshot" />
            <img rel="lightbox[inspectgithub]"src="~/Images/inspectgithub3.png" alt="screenshot" title="InspectBin Github screenshot" />*@
        <hr/>
        <div class="" data-bind="visible: !RequestList() || RequestList().length == 0">
            No http requests inspected yet.
        </div>
        <div class="" data-bind="template: { name:'http-request', foreach: RequestList }"></div>
    </div>
    <div class="col-md-3">
        <div class="well sidebar-nav">
            <div>
                <div class="clearfix">
                    <h5 class="pull-left" data-bind="text: Inspector().Title"></h5>
                    <h5 class="pull-left" data-bind="visible: !Inspector().Title()">
                        No title
                    </h5>
                    <small class="pull-left">
                        <a href="#" data-bind="click: function(){ NewTitle(Inspector().Title()); IsEditingTitle(true); }">edit</a>
                    </small>
                </div>
                <div class="input-group form-group-sm" data-bind="visible: IsEditingTitle">
                    <span class="input-group-btn">
                        <button class="btn btn-sm btn-default" type="button" data-bind="click: function(){ IsEditingTitle(false); }">X</button>

                    </span>
                    <input type="text" class="form-control" data-bind="value: NewTitle"/>
                    <span class="input-group-btn">
                        <button class="btn btn-sm btn-default" type="button" data-bind="click: saveTitle">save</button>
                    </span>
                </div>
            </div>
            <ul class="nav nav-list nav-pills nav-stacked">
                <li class="nav-header">Actions</li>
                <li>
                    <a href="#" data-bind="click: clearRecentRequests">Clear</a>
                </li>
                <li class="nav-header">Your bins:</li>
                <!-- ko ifnot: UserProfile -->
                <li>Login to add your bins</li>
                <!-- /ko -->
                <!-- ko if: UserProfile -->
                <!-- ko foreach: UserProfile().Inspectors -->
                <li data-bind="css: { active: Id() === $parent.Inspector().Id() }">
                    <!-- ko if: Id() !== $parent.Inspector().Id() -->
                    <a href="#" class="action" data-bind="click:$parent.removeInspector">
                        <i class="icon-remove"></i>
                    </a>
                    <!-- /ko -->
                    <a data-bind="attr: { href: '#' + UniqueKey() }">
                        <!-- ko if: UniqueKey() === Title() || !Title() -->
                        <span data-bind="text: UniqueKey"></span>
                        <!-- /ko -->
                        <!-- ko if: UniqueKey() !== Title() && Title() -->
                        <span data-bind="text: Title"></span>
                        <small>(<!-- ko text: UniqueKey --><!-- /ko -->)</small>
                        <!-- /ko -->
                    </a>
                </li>
                <!-- /ko -->
                <!-- /ko -->
            </ul>
        </div>
        <!--/.well -->
    </div>
</div>
<script type="text/html" id="http-request">
    <div class="well httprequest">
        <div class="httprequest-section">
            <div class="label label-info" data-bind="text:HttpMethod"></div>
            <a data-bind="text: RawUrl, attr: {href:'#htr-hide-' + $index()}" data-toggle="collapse"></a>
            <div class="pull-right">
                <div class="label label-warning" data-bind="visible: ContentType && ContentType.length > 0, text:ContentType"></div>
                <div class="label label-warning" data-bind="visible: !(ContentType && ContentType.length > 0)">No ContentType</div>
            </div>
        </div>
        <div class="httprequest-section clearfix">
            <div class="pull-left">
                <span data-bind="dateformat: { date: DateCreated, format: 'HH:mm:ss.fff dddd, d MMMM yyyy'}"></span>
            </div>
            <div class="pull-right">
                <ul class="property-list unstyled">
                    <li>
                        <div>Client</div>
                        <span data-bind="text: Client.HostAddress"></span>
                    </li>
                </ul>
            </div>
        </div>
        <div data-bind="attr: {id:'htr-hide-' + $index()}" class="collapse in">
            <div class="httprequest-section">
                <ul class="property-list unstyled">
                    <li>
                        <div>Referrer</div>
                        <span data-bind="text: UrlReferrer"></span>
                    </li>
                    <li>
                        <div>Client Hostname</div>
                        <span data-bind="text: Client.HostName"></span>
                    </li>
                </ul>
            </div>
            <div class="httprequest-section">
                <ul class="nav nav-tabs">
                    <li class="active">
                        <a data-toggle="tab" data-bind="attr: {href: '#content-' + $index()}">Content</a>
                    </li>
                    <li>
                        <a data-toggle="tab" data-bind="attr: {href: '#headers-' + $index()}">Headers</a>
                    </li>
                    <li>
                        <a data-toggle="tab" data-bind="attr: {href: '#other-' + $index()}">Other</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" data-bind="withCodeMirror: 'CodeMirror', attr: {id: 'content-' + $index()}">
                        <div class="form-inline clearfix">
                            <div class="form-group pull-left">
                                <div class="input-group">
                                    <select data-bind="options: $parent.SupportedContentTypes, value: ContentType" class="form-control"></select>
                                    <span class="input-group-btn">
                                        <button type="button" class="btn btn-default" data-bind="click: CodeMirror.formatCodeMirror">Format</button>
                                    </span>
                                </div>
                            </div>
                            <div class="pull-right">
                                <label class="checkbox inline" style="margin-right: 10px;">
                                    <input type="checkbox" data-bind="checked: CodeMirror.LineWrapping"/>
                                    Wrap long lines
                                </label>
                            </div>
                        </div>
                        <div class="gutter-top">
                            <textarea data-bind="codeMirror: { name: 'CodeMirror', text: Content, contentType: ContentType }" style="width: 99%"></textarea>
                        </div>
                    </div>
                    <div class="tab-pane" data-bind="attr: {id: 'headers-' + $index()}">
                        <ul class="header-list unstyled" data-bind="foreach: Headers">
                            <li>
                                <div data-bind="text: Key"></div>
                                <span data-bind="text: Value"></span>
                            </li>
                        </ul>
                    </div>
                    <div class="tab-pane" data-bind="attr: {id: 'other-' + $index()}">
                        <span data-bind="text: Client.Agent"></span>
                        <span data-bind="text: RawUrl"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>
@section styles
{
    @Styles.Render("~/Scripts/codemirror/lib/codemirror.css")
}
@section scripts
{
    @Scripts.Render("~/Scripts/codemirror/lib/codemirror.js")

    @Scripts.Render("~/Scripts/codemirror/mode/xml/xml.js")
    @Scripts.Render("~/Scripts/codemirror/mode/htmlmixed/htmlmixed.js")
    @Scripts.Render("~/Scripts/codemirror/mode/properties/properties.js")
    @Scripts.Render("~/Scripts/codemirror/mode/css/css.js")
    @Scripts.Render("~/Scripts/codemirror/mode/javascript/javascript.js")
    @Scripts.Render("~/Scripts/codemirror/lib/util/formatting.js")
    @Scripts.Render("~/bundles/backbone")
    @Scripts.Render("~/bundles/zeroclipboard")
    @Scripts.Render("~/bundles/signalr")
    <script src="~/signalr/hubs" type="text/javascript"></script>
    @Scripts.Render("~/bundles/inspectr")
    <script type="text/javascript">
        var onStart = function () {
            ZeroClipboard.config({
                swfPath: "@Url.Content("~/Scripts/zeroclipboard/ZeroClipboard.swf")",
                moviePath: "@Url.Content("~/Scripts/zeroclipboard/ZeroClipboard.swf")",
                forceHandCursor: true
            });
            var clip = new ZeroClipboard(document.getElementById("copyinspectorurl"));
            clip.on("ready", function (client) {
                clip.on("aftercopy", function (e) {
                    // `this` is the element that was clicked
                    var orig = $('#copyinspectorurl').html();
                    $('#copyinspectorurl').html('Copied!');
                    setTimeout(function () {
                        $('#copyinspectorurl').html(orig);
                    }, 5000);
                });

                clip.on('copy', function (e) {
                    var clipboard = e.clipboardData;
                    clipboard.setData("text/plain", $('#inspectorurl').val());
                });
            });
        };

        $.inspectR.start({
            inspector: '@Model.InspectorInfo.UniqueKey',
            onStart: onStart
        });
    </script>
}